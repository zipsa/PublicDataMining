install.packages("githubinstall")
data(geneList)
library(DOSE) #for GSEA analysis
library(DOSE) #for GSEA analysis
library(enrichplot) # for plotting
data(geneList)
edo <- enrichDGN(de) #using vector of entrez gene id
de <- names(geneList)[abs(geneList) > 2]
edo <- enrichDGN(de) #using vector of entrez gene id
data()
?data()
data(geneList)
#read data as dataframe
c4 <- read.csv("c4-cd8-layn-entrezid.csv", header=FALSE)
test <- as.vector(c4[,'V1']) #as integer(it is not charactor but still works)
setwd("~/") #Set Documents folder as destination
library(DOSE) #for GSEA analysis
library(DOSE) #for GSEA analysis
library(enrichplot) # for plotting
#read data as dataframe
c4 <- read.csv("c4-cd8-layn-entrezid.csv", header=FALSE)
test <- as.vector(c4[,'V1']) #as integer(it is not charactor but still works)
edo <- enrichDGN(test) #using vector of entrez gene id
fortify(model, edo, showCategory = 30)
upsetplot(edo)
emapplot(edo)
emapplot(edo)
upsetplot(edo)
edo2 <- enrichDO(test)
dotplot(edo2, showCategory=30)
dotplot(edo2, showCategory=30)
upsetplot(edo2)
emapplot(edo2)
emapplot(edo2)
emapplot(edo2)
upsetplot(edo2)
emapplot(edo2)
dotplot(edo2, showCategory=30)
summmary(edo2)
summary(edo2)
setwd("~/") #Set Documents folder as destination
write.csv(summary(edo))
write.csv(summary(edo), file="summary-enrichDGN")
write.csv(as.data.frame(summary(edo)), file="summary-enrichDGN")
write.csv(as.dataframe(summary(edo)), file="summary-enrichDGN")
as.data.frame(summary(edo))
write.csv(as.data.frame(summary(edo)), file="summary-enrichDGN.csv")
write.csv(summary(edo), file="summary-enrichDGN.csv")
write.table(summary(edo), file="summary-enrichDGN.csv")
write.csv(summary(edo))
write.csv(summary(edo), file="summary-enrichDGN.csv")
setwd("~/") #Set Documents folder as destination
setwd("~/") #Set Documents folder as destination
library(DOSE) #for GSEA analysis
library(DOSE) #for GSEA analysis
library(enrichplot) # for plotting
#read data as dataframe
c4 <- read.csv("c4-cd8-layn-entrezid.csv", header=FALSE)
test <- as.vector(c4[,'V1']) #as integer(it is not charactor but still works)
#DisGeNet
edo <- enrichDGN(test) #using vector of entrez gene id. It is DOSE function. Enrichment analysis based on the DisGeNeT.
#DisGeNet
edo <- enrichDGN(test) #using vector of entrez gene id. It is DOSE function. Enrichment analysis based on the DisGeNeT.
#Visualization
dotplot(edo, showCategory=30)
upsetplot(edo)
emapplot(edo)
write.csv(summary(edo), file="summary-enrichDGN.csv")
class(summary(edo))
s <- summary(edo)
View(s)
write.csv(s)
write.csv(s, test.csv)
write.csv(s, "test.csv"")
write.csv(s, "test.csv")
edo2 <- enrichDO(test)
write.csv(s, "test.csv")
write.csv(s, "test.csv")
write.csv(s, "write.csv")
View(s)
View(s)
s <- summary(edo) #I would like to write the results, but it wont let me
View(s)
write.table(s, "filename.txt, sep="\t")
write.table(s, "filename.txt", sep="\t")
write.csv(s, "C:/Users/hjin02/Documents/please.csv")
write.csv(s, "C:/Users/hjin02/Documents/summary-DGN") #Directory setting has an issue. Set up destination manually.
write.csv(s, "C:/Users/hjin02/Documents/summary-DGN.csv") #Directory setting has an issue. Set up destination manually.
write.csv(edo, "C:/Users/hjin02/Documents/summary-edo.csv") #Directory setting has an issue. Set up destination manually.
edox <- setReadable(edo, 'org.Hs.eg.db', 'ENTREZID')
View(edox)
write.csv(edox, "C:/Users/hjin02/Documents/summary-DGN-annotation.csv")
#Repeat with
edo3 <- enrichNCG(test)
dotplot(edo3, showCategory=30)
dotplot(edo3, showCategory=30)
edo2x <- setReadable(edo2, 'org.Hs.eg.db', 'ENTREZID')
write.csv(edo2x, "C:/Users/hjin02/Documents/summary-DO-annotation.csv")
library(clusterProfilier)
source("https://bioconductor.org/biocLite.R")
biocLite("clusterProfiler")
library(clusterProfilier)
library(clusterProfiler)
ego <- enrichGo(test)
ego <- enrichGO(test)
ego <- enrichGO(test, OrgDb = org.Hs.eg.db)
head(ego)
#KEGG over-representation test
ekk <- enrichKEGG(test, organism = 'hsa)
)
''
)
adf
#KEGG over-representation test
ekk <- enrichKEGG(test, organism = 'hsa')
#KEGG over-representation test
ekk <- enrichKEGG(test, organism = 'hsa')
head(ekk)
ekkx <- setReadable(ekk, 'org.Hs.eg.db', 'ENTREZID')
head(ekkx)
dotplot(ekk)
#GO over-representatino test - it has three hierarchy
ego.cc <- enrichGO(test, OrgDb = org.Hs.eg.db, ont = "CC") #Cellular component
#GO over-representatino test - it has three hierarchy
ego.cc <- enrichGO(test, OrgDb = org.Hs.eg.db, ont = "CC") #Cellular component
ego.mf <- enrichGO(test, OrgDb = org.Hs.eg.db, ont = "MF") #molecular function
ego.bp <- enrichGO(test, OrgDb = org.Hs.eg.db, ont = "BP") #biological process
write.csv(ekkx, "C:/Users/hjin02/Documents/summary-KEGG-annotation.csv")
ego.ccx <- setReadable(ego.cc, 'org.Hs.eg.db', 'ENTREZID')
ego.mfx <- setReadable(ego.mf, 'org.Hs.eg.db', 'ENTREZID')
ego.bpx <- setReadable(ego.bp, 'org.Hs.eg.db', 'ENTREZID')
write.csv(ego.ccx, "C:/Users/hjin02/Documents/summary-GO-cellular-component.csv")
write.csv(ego.mfx, "C:/Users/hjin02/Documents/summary-GO-molecular-function.csv")
write.csv(ego.bpx, "C:/Users/hjin02/Documents/summary-GO-biological-process.csv")
?dotplot
dotplot(ego.cc, showCategory=30)
dotplot(ego.cc, showCategory=30)
dotplot(ego.mf, showCategory=30)
dotplot(ego.mf, showCategory=30)
dotplot(ego.bp, showCategory=30)
dotplot(ego.bp, showCategory=30)
dotplot(ego.mf, showCategory=30)
dotplot(ego.cc, showCategory=30)
library(swirl)
install.package(stringi)
install.packages(stringi)
install.packages("stringi")
library(swirl)
swirl()
ls()
View(plants)
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head()
head(x=10)
head(plants, 10)
tail(head, 15)
tail(plant, 15)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
View(plants)
str(plants)
vector(c(0.5, 55, -10, 6))
vector(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
num_vect <1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "HYJ")
my_name <- c(my_char, "JYJ")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep=" ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
swirl()
setwd("C:/Users/hjin02/Desktop/scRNAseq/results-analysis/enrich-tissue/") #Somehow you should directly
library(TissueEnrich)
library(TissueEnrich)
c4 <- read.csv("c4-cd8-layn-genename.csv", header=FALSE)
inputGenes <- as.vector(c4[,'V1']) #convert table into integer or character
gs <- GeneSet(geneIds=inputGenes, organism="Homo Sapiens", geneIdType=SymbolIdentifier())
output <- teEnrichment(inputGenes = gs)
seExp<-output[[2]][["Liver"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
seExp<-output[[2]][["Adipose Tissue"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Adrenal Gland"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Breast"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Gerebral Cortex"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Colon"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Duodenum"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Endometrium"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Esophagus"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Fallopian Tube"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Gallbladder"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Heart Muscle"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Ovary"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Liver"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Placenta"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
seExp<-output[[2]][["Skeletal Muscle"]]
exp<-setNames(data.frame(assay(seExp), row.names = rowData(seExp)[,1]), colData(seExp)[,1])
exp$Gene<-row.names(exp)
exp<-exp %>% gather(Tissue=1:(ncol(exp)-1))
exp
