distinct(nsclc.cd4, tissueType) #Show unique values (all clusters)
nsclc.n <- nsclc.cd4 %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(tissueType == "Normal (N)")
nsclc.t <- nsclc.cd4 %>%
select(tissueType, majorCluster, CCR8, CXorf21,CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(tissueType == "Tumor-infiltrating (T)")
df.crc <-data.frame(
group = c("Peripheral", "Normal", "Tumor"),
value = c(nrow(crc.p), nrow(crc.n), nrow(crc.t))
)
# Reordering plot based on Factor levels: https://sebastiansauer.github.io/ordering-bars/
# In ggplot2, defalt is alphabetical order when character. If factor, the "order of factor levels"" is used
df.crc$group <- factor(df.crc$group, levels=c("Peripheral", "Normal", "Tumor")) #Reorder plot
pie.crc <- ggplot(df.crc, aes(x="", y=value, fill=group))+
geom_bar(width =1, stat = "identity")+
coord_polar("y", start=0)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("Tissue Origin of \n CRC CD4 T cells (all 4 clusters)") +
xlab("# of Cells") + ylab("")+
theme_bw()
plot(pie.crc)
plot(pie.crc)
df.nsclc <-data.frame(
group = c("Peripheral", "Normal", "Tumor"),
value = c(nrow(nsclc.p), nrow(nsclc.n), nrow(nsclc.t))
)
df.nsclc$group <- factor(df.nsclc$group, levels=c("Peripheral", "Normal", "Tumor"))
pie.nsclc <- ggplot(df.nsclc, aes(x="", y=value, fill=group))+
geom_bar(width =1, stat = "identity")+
coord_polar("y", start=0)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("Tissue Origin of \n NSCLC CD4T (all 3 clusters)") +
xlab("# of Cells") + ylab("")+
theme_bw()
plot(pie.nsclc)
plot(pie.nsclc)
#Periphery
crc.p <- crc.cd4 %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(SampleType=="PTR"|SampleType=="PTH"|SampleType=="PTY")
distinct(crc.p, Cluster)
#Periphery&cluster
crc.p.C01.CCR7 <- crc.p %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C01-CCR7")
crc.p.C10.IKZF2 <- crc.p %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C10-IKZF2")
crc.p.C11.IL10 <- crc.p %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C11-IL10")
crc.p.C12.CCR8 <- crc.p %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C12-CCR8")
#Normal
crc.n <- crc.cd4 %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(SampleType=="NTR"|SampleType=="NTH"|SampleType=="NTY")
#Normal
crc.n <- crc.cd4 %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(SampleType=="NTR"|SampleType=="NTH"|SampleType=="NTY")
#Normal&cluster
crc.n.C01.CCR7 <- crc.n %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C01-CCR7")
#Normal&cluster
crc.n.C01.CCR7 <- crc.n %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C01-CCR7")
crc.n.C10.IKZF2 <- crc.n %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C10-IKZF2")
crc.n.C11.IL10 <- crc.n %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C11-IL10")
crc.n.C12.CCR8 <- crc.n %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C12-CCR8")
#Tumor
crc.t <- crc.cd4 %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(SampleType=="TTR"|SampleType=="TTH"|SampleType=="TTY")
crc.t.C10.IKZF2 <- crc.t %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C10-IKZF2")
crc.t.C11.IL10 <- crc.t %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C11-IL10")
crc.t.C12.CCR8 <- crc.t %>%
select(SampleType, Cluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(Cluster=="CD4_C12-CCR8")
#Generate a summary table
tissue <- rep(c("Peripheral", "Normal", "Tumor"), each = 4)
cluster <- rep(c("CD4_C01-CCR7","CD4_C10-IKZF2","CD4_C11-IL10","CD4_C12-CCR8"), 3)
value <-
c(nrow(crc.p.C01.CCR7), nrow(crc.p.C10.IKZF2),nrow(crc.p.C11.IL10), nrow(crc.p.C12.CCR8), nrow(crc.n.C01.CCR7), nrow(crc.n.C10.IKZF2), nrow(crc.n.C11.IL10), nrow(crc.n.C12.CCR8), nrow(crc.t.C01.CCR7), nrow(crc.t.C10.IKZF2), nrow(crc.t.C11.IL10), nrow(crc.t.C12.CCR8))
df.crc.all <- data.frame(tissue, cluster, value)
df.crc.all$tissue <- factor(df.crc.all$tissue, levels=c("Peripheral", "Normal", "Tumor")) #Reorder bar graph by factor-levels
factor(df.crc.all$tissue, levels=c("Peripheral", "Normal", "Tumor"))
library(hrbrthemes) #For theme, but did not use
library(viridis)
bar.df.crc.all <-
ggplot(df.crc.all, aes(fill=cluster, y=value, x=tissue)) +
geom_bar(position="fill", stat="identity")+
ggtitle("Tissue distribution of CD4 clusters in CRC")+
xlab("")+
ylab("")+
scale_fill_viridis(discrete = T)+
theme_bw()
plot(bar.df.crc.all)
plot(bar.df.crc.all)
#Periphery
nsclc.p <- nsclc.cd4 %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(tissueType == "Peripheral blood (P)")
distinct(nsclc.p, majorCluster)
#Periphery&cluster
nsclc.p.C01.CCR7 <- nsclc.p %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(majorCluster=="CD4_C1-CCR7")
nsclc.p.C08.FOXP3 <- nsclc.p %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(majorCluster=="CD4_C8-FOXP3")
nsclc.p.C09.CTLA4 <- nsclc.p %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(majorCluster=="CD4_C9-CTLA4")
#Normal
nsclc.n <- nsclc.cd4 %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(tissueType == "Normal (N)")
#Normal&cluster
nsclc.n.C01.CCR7 <- nsclc.n %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(majorCluster=="CD4_C1-CCR7")
nsclc.n.C08.FOXP3 <- nsclc.n %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(majorCluster=="CD4_C8-FOXP3")
nsclc.n.C09.CTLA4 <- nsclc.n %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(majorCluster=="CD4_C9-CTLA4")
#Tumor
nsclc.t <- nsclc.cd4 %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(tissueType == "Tumor-infiltrating (T)")
#Tumor&cluster
nsclc.t.C01.CCR7 <- nsclc.t %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(majorCluster=="CD4_C1-CCR7")
nsclc.t.C08.FOXP3 <- nsclc.t %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(majorCluster=="CD4_C8-FOXP3")
nsclc.t.C09.CTLA4 <- nsclc.t %>%
select(tissueType, majorCluster, CCR8, CXorf21, CTLA4, FOXP3, IL2RA, TNFRSF9, TNFRSF8, EBI3, CCL22) %>%
filter(majorCluster=="CD4_C9-CTLA4")
tissue <- rep(c("Peripheral", "Normal", "Tumor"), each = 3)
cluster <- rep(c("CD4_C1-CCR7","CD4_C8-FOXP3","CD4_C9-CTLA4"), 3)
value <-
c(nrow(nsclc.p.C01.CCR7), nrow(nsclc.p.C08.FOXP3),nrow(nsclc.p.C09.CTLA4), nrow(nsclc.n.C01.CCR7), nrow(nsclc.n.C08.FOXP3),nrow(nsclc.n.C09.CTLA4), nrow(nsclc.t.C01.CCR7), nrow(nsclc.t.C08.FOXP3),nrow(nsclc.t.C09.CTLA4))
df.nsclc.all <- data.frame(tissue, cluster, value)
df.nsclc.all$tissue <- factor(df.nsclc.all$tissue, levels=c("Peripheral", "Normal", "Tumor")) #Reorder bar graph by factor-levels
library(hrbrthemes) #For theme, bud did not use
library(viridis)
bar.df.nsclc.all <-
ggplot(df.nsclc.all, aes(fill=cluster, y=value, x=tissue)) +
geom_bar(position="fill", stat="identity")+
ggtitle("Tissue distribution of CD4 clusters in NSCLC")+
xlab("")+
ylab("")+
scale_fill_viridis(discrete = T)+
theme_bw()
plot(bar.df.nsclc.all)
crc.p$tissue <- rep("Peripheral", nrow(crc.p))
crc.n$tissue <- rep("Normal", nrow(crc.n)) #Need to add new tissue column to combine NTH etc.
crc.t$tissue <- rep("Tumor", nrow(crc.t))
#now you can combine them, which maintain tissue infomration.
df.crc.vplot <- rbind(crc.p, crc.n, crc.t)
df.crc.vplot$tissue <- factor(df.crc.vplot$tissue, levels=c("Peripheral", "Normal", "Tumor")) #Reorder bar graph by factor-levels
v.crc.ccr8 <-
ggplot(df.crc.vplot, aes(x=tissue, y=CCR8, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("CCR8 exp distribution in CRC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
plot(v.crc.ccr8)
#This plot doesnt need to re-order. Alphabetical order is good enough
v.crc.ccr8.bycluster <-
ggplot(crc.cd4, aes(x=Cluster, y=CCR8, fill=Cluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("CCR8 exp distribution in CRC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
plot(v.crc.ccr8.bycluster)
#NSCLC
nsclc.p$tissue <- rep("Peripheral", nrow(nsclc.p))
#NSCLC
nsclc.p$tissue <- rep("Peripheral", nrow(nsclc.p))
nsclc.n$tissue <- rep("Normal", nrow(nsclc.n)) #Assignment is redundant but did it anyway to have same labeling.
nsclc.t$tissue <- rep("Tumor", nrow(nsclc.t))
df.nsclc.vplot <- rbind(nsclc.p, nsclc.n, nsclc.t)
df.nsclc.vplot$tissue <- factor(df.nsclc.vplot$tissue, levels=c("Peripheral", "Normal", "Tumor")) #Reorder bar graph by factor-levels
v.nsclc.ccr8 <-
ggplot(df.nsclc.vplot, aes(x=tissue, y=CCR8, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("CCR8 exp distribution in NSCLC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
plot(v.nsclc.ccr8)
v.nsclc.ccr8.bycluster <-
ggplot(nsclc.cd4, aes(x=majorCluster, y=CCR8, fill=majorCluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("CCR8 exp distribution in NSCLC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
plot(v.crc.ccr8)
plot(v.crc.ccr8.bycluster)
plot(v.nsclc.ccr8)
plot(v.crc.ccr8)
plot(v.crc.ccr8)
plot(v.crc.ccr8.bycluster)
plot(v.nsclc.ccr8)
plot(v.nsclc.ccr8)
plot(v.nsclc.ccr8.bycluster)
plot(v.nsclc.ccr8.bycluster)
#These plot depends on df.crc.vplot table generated in previous section
#CTLA4
v.crc.ctla4 <-
ggplot(df.crc.vplot, aes(x=tissue, y=CTLA4, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("CTLA4 exp distribution in CRC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
plot(v.crc.ctla4)
#This plot doesnt need to re-order. Alphabetical order is good enough
v.crc.ctla4.bycluster <-
ggplot(crc.cd4, aes(x=Cluster, y=CTLA4, fill=Cluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("CTLA4 exp distribution in CRC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
plot(v.crc.ctla4.bycluster)
v.nsclc.ctla4 <-
ggplot(df.nsclc.vplot, aes(x=tissue, y=CTLA4, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("CTLA4 exp distribution in NSCLC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
plot(v.nsclc.ctla4)
v.nsclc.ctla4.bycluster <-
ggplot(nsclc.cd4, aes(x=majorCluster, y=CTLA4, fill=majorCluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("CTLA4 exp distribution in NSCLC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
plot(v.nsclc.ctla4.bycluster)
#FOXP3
v.crc.foxp3 <-
ggplot(df.crc.vplot, aes(x=tissue, y=FOXP3, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("FOXP3 exp distribution in CRC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
plot(v.crc.foxp3)
#This plot doesnt need to re-order. Alphabetical order is good enough
v.crc.foxp3.bycluster <-
ggplot(crc.cd4, aes(x=Cluster, y=FOXP3, fill=Cluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("FOXP3 exp distribution in CRC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
plot(v.crc.foxp3.bycluster)
v.nsclc.foxp3 <-
ggplot(df.nsclc.vplot, aes(x=tissue, y=FOXP3, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("FOXP3 exp distribution in NSCLC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
plot(v.nsclc.foxp3)
v.nsclc.foxp3.bycluster <-
ggplot(nsclc.cd4, aes(x=majorCluster, y=FOXP3, fill=majorCluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("FOXP3 exp distribution in NSCLC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
plot(v.nsclc.foxp3.bycluster)
#IL2RA (CD25)
v.crc.il2ra <-
ggplot(df.crc.vplot, aes(x=tissue, y=IL2RA, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("IL2RA(CD25) exp distribution in CRC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
#This plot doesnt need to re-order. Alphabetical order is good enough
v.crc.il2ra.bycluster <-
ggplot(crc.cd4, aes(x=Cluster, y=IL2RA, fill=Cluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("IL2RA(CD25) exp distribution in CRC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
v.nsclc.il2ra <-
ggplot(df.nsclc.vplot, aes(x=tissue, y=IL2RA, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("IL2RA(CD25) exp distribution in NSCLC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
v.nsclc.il2ra.bycluster <-
ggplot(nsclc.cd4, aes(x=majorCluster, y=IL2RA, fill=majorCluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("IL2RA(CD25) exp distribution in NSCLC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
#TNFRSF9 (4-1BB)
v.crc.tnfrsf9 <-
ggplot(df.crc.vplot, aes(x=tissue, y=TNFRSF9, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("TNFRSF9(4-1BB) exp distribution in CRC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
#This plot doesnt need to re-order. Alphabetical order is good enough
v.crc.tnfrsf9.bycluster <-
ggplot(crc.cd4, aes(x=Cluster, y=TNFRSF9, fill=Cluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("TNFRSF9(4-1BB) exp distribution in CRC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
v.nsclc.tnfrsf9 <-
ggplot(df.nsclc.vplot, aes(x=tissue, y=TNFRSF9, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("TNFRSF9(4-1BB) exp distribution in NSCLC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
v.nsclc.tnfrsf9.bycluster <-
ggplot(nsclc.cd4, aes(x=majorCluster, y=TNFRSF9, fill=majorCluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("TNFRSF9(4-1BB) exp distribution in NSCLC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
# TNFRSF8
v.crc.tnfrsf8 <-
ggplot(df.crc.vplot, aes(x=tissue, y=TNFRSF8, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("TNFRSF8 exp distribution in CRC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
#This plot doesnt need to re-order. Alphabetical order is good enough
v.crc.tnfrsf8.bycluster <-
ggplot(crc.cd4, aes(x=Cluster, y=TNFRSF8, fill=Cluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("TNFRSF8 exp distribution in CRC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
v.nsclc.tnfrsf8 <-
ggplot(df.nsclc.vplot, aes(x=tissue, y=TNFRSF8, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("TNFRS8 exp distribution in NSCLC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
v.nsclc.tnfrsf8.bycluster <-
ggplot(nsclc.cd4, aes(x=majorCluster, y=TNFRSF8, fill=majorCluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("TNFRSF8 exp distribution in NSCLC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
#EBI3
v.crc.ebi3 <-
ggplot(df.crc.vplot, aes(x=tissue, y=EBI3, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("EBI3 exp distribution in CRC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
#This plot doesnt need to re-order. Alphabetical order is good enough
v.crc.ebi3.bycluster <-
ggplot(crc.cd4, aes(x=Cluster, y=EBI3, fill=Cluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("EBI3 exp distribution in CRC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
v.nsclc.ebi3 <-
ggplot(df.nsclc.vplot, aes(x=tissue, y=EBI3, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("EBI3 exp distribution in NSCLC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
v.nsclc.ebi3.bycluster <-
ggplot(nsclc.cd4, aes(x=majorCluster, y=EBI3, fill=majorCluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("EBI3 exp distribution in NSCLC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
#CCL22
v.crc.ccl22 <-
ggplot(df.crc.vplot, aes(x=tissue, y=CCL22, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("CCL22 exp distribution in CRC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
#This plot doesnt need to re-order. Alphabetical order is good enough
v.crc.ccl22.bycluster <-
ggplot(crc.cd4, aes(x=Cluster, y=CCL22, fill=Cluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("CCL22 exp distribution in CRC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
v.nsclc.ccl22 <-
ggplot(df.nsclc.vplot, aes(x=tissue, y=CCL22, fill=tissue)) +
geom_violin(trim=FALSE)+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
ggtitle("CCL22 exp distribution in NSCLC by tissue")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()
v.nsclc.ccl22.bycluster <-
ggplot(nsclc.cd4, aes(x=majorCluster, y=CCL22, fill=majorCluster))+
geom_violin(trim=FALSE)+
scale_fill_viridis(discrete = T)+
ggtitle("CCL22 exp distribution in NSCLC by cluster")+
xlab("") + ylab("Log2(Norm.TPM)")+
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1)) #Note that theme_bw will override theme. Order here is important
#CTLA4
plot(v.crc.ctla4)
plot(v.crc.ctla4.bycluster)
plot(v.nsclc.ctla4)
plot(v.nsclc.ctla4.bycluster)
plot(v.nsclc.ctla4.bycluster)
plot(v.nsclc.ctla4)
plot(v.crc.ctla4.bycluster)
plot(v.crc.ctla4)
plot(v.crc.foxp3)
plot(v.crc.foxp3.bycluster)
plot(v.nsclc.foxp3)
plot(v.nsclc.foxp3.bycluster)
plot(v.crc.il2ra)
plot(v.crc.il2ra.bycluster)
plot(v.nsclc.il2ra)
plot(v.nsclc.il2ra.bycluster)
plot(v.crc.tnfrsf9)
plot(v.crc.tnfrsf9.bycluster)
plot(v.crc.tnfrsf8)
plot(v.crc.tnfrsf8.bycluster)
plot(v.nsclc.tnfrsf8)
plot(v.nsclc.tnfrsf8.bycluster)
plot(v.crc.ebi3)
plot(v.crc.ebi3.bycluster)
plot(v.crc.ccl22)
plot(v.crc.ccl22.bycluster)
#Generate a combined plot
p1<-
plot_grid(pie.crc, pie.nsclc, bar.df.crc.all, bar.df.nsclc.all, v.crc.ccr8, v.nsclc.ccr8, v.crc.ccr8.bycluster, v.nsclc.ccr8.bycluster, ncol=2, labels = "AUTO")
library(cowplot)
#Generate a combined plot
p1<-
plot_grid(pie.crc, pie.nsclc, bar.df.crc.all, bar.df.nsclc.all, v.crc.ccr8, v.nsclc.ccr8, v.crc.ccr8.bycluster, v.nsclc.ccr8.bycluster, ncol=2, labels = "AUTO")
plot(p1)
plot(p1)
p2<-
plot_grid(v.crc.ctla4, v.nsclc.ctla4, v.crc.ctla4.bycluster, v.nsclc.ctla4.bycluster, v.crc.foxp3, v.nsclc.foxp3, v.crc.foxp3.bycluster, v.nsclc.foxp3.bycluster, v.crc.il2ra, v.nsclc.il2ra, v.crc.il2ra.bycluster, v.nsclc.il2ra.bycluster,ncol=2, labels = "AUTO")
p2<-
plot_grid(v.crc.ctla4, v.nsclc.ctla4, v.crc.ctla4.bycluster, v.nsclc.ctla4.bycluster, v.crc.foxp3, v.nsclc.foxp3, v.crc.foxp3.bycluster, v.nsclc.foxp3.bycluster, v.crc.il2ra, v.nsclc.il2ra, v.crc.il2ra.bycluster, v.nsclc.il2ra.bycluster,ncol=2, labels = "AUTO")
plot(p2)
plot(p2)
p3<-
plot_grid(v.crc.tnfrsf9, v.nsclc.tnfrsf9, v.crc.tnfrsf9.bycluster, v.nsclc.tnfrsf9.bycluster, v.crc.tnfrsf8, v.nsclc.tnfrsf8, v.crc.tnfrsf8.bycluster, v.nsclc.tnfrsf8.bycluster, v.crc.ebi3, v.nsclc.ebi3, v.crc.ebi3.bycluster, v.nsclc.ebi3.bycluster, v.crc.ccl22, v.nsclc.ccl22, v.crc.ccl22.bycluster, v.nsclc.ccl22.bycluster, ncol=2, labels = "AUTO")
p3<-
plot_grid(v.crc.tnfrsf9, v.nsclc.tnfrsf9, v.crc.tnfrsf9.bycluster, v.nsclc.tnfrsf9.bycluster, v.crc.tnfrsf8, v.nsclc.tnfrsf8, v.crc.tnfrsf8.bycluster, v.nsclc.tnfrsf8.bycluster, v.crc.ebi3, v.nsclc.ebi3, v.crc.ebi3.bycluster, v.nsclc.ebi3.bycluster, v.crc.ccl22, v.nsclc.ccl22, v.crc.ccl22.bycluster, v.nsclc.ccl22.bycluster, ncol=2, labels = "AUTO")
plot(p3)
plot(p3)
